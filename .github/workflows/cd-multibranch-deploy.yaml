name: Build, Push, and Deploy Multibranch

# on:
#   push:
#     branches:
#       - master
#       - staging
#       - development
#       - feature-*

on:
  pull_request:
    branches:
      - ench/git_branch_flow
    types:
      - opened
      - synchronize
      - reopened

# on:
#   pull_request:
#     branches:
#       - master
#       - dev
#       - rc  
#     types:
#       - opened
#       - synchronize
#       - reopened
#     paths:
#       - "payoneer/**"
#   workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: payoneer
    
    outputs:
      version: ${{ steps.package_version.outputs.version }}
      branch_name: ${{ steps.branch_name.outputs.branch }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Branch Name
        id: branch_name
        uses: tj-actions/branch-names@v8
            
      - name: Set Environment Variables
        id: set_env
        run: |
          if [[ "${{ steps.branch_name.outputs.current_branch }}" == "development" ]]; then
            echo "deploy_port=8081" >> $GITHUB_ENV
          elif [[ "${{ steps.branch_name.outputs.current_branch }}" == "staging" ]]; then
            echo "deploy_port=8082" >> $GITHUB_ENV
          else
            echo "deploy_port=80" >> $GITHUB_ENV
          fi
          echo "deploy_port=${{ env.deploy_port }}" >> $GITHUB_OUTPUT
      
      - name: Extract Version from package.json
        id: package_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Export Outputs
        run: |
          echo "version=${{ env.version }}" >> $GITHUB_OUTPUT
          echo "branch=${{ steps.branch_name.outputs.current_branch }}" >> $GITHUB_OUTPUT

      
      - name: Extract Metadata (Tags, Labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: vladislavtimofeev/payoneer-napp
          tags: |
            type=raw,value=${{ env.version }}-${{ github.run_number }},enable=${{ steps.branch_name.outputs.current_branch == 'master' }}
            type=raw,value=${{ env.version }}-${{ github.run_number }}-staging,enable=${{ steps.branch_name.outputs.current_branch == 'staging' }}
            type=raw,value=${{ env.version }}-${{ github.run_number }}-development,enable=${{ steps.branch_name.outputs.current_branch == 'development' }}
            type=raw,value=${{ env.version }}-${{ github.run_number }}-${{ steps.branch_name.outputs.current_branch }}

    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: payoneer/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_PORT=${{ env.deploy_port }}  # Change this value if needed
          cache-from: type=registry,ref=vladislavtimofeev/payoneer-napp:buildcache
          cache-to: type=inline

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.build.outputs.version }}
      BRANCH: ${{ needs.build.outputs.branch_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Upgrade pip for Python 3.8
        run: |
          python -m ensurepip --default-pip
          python -m pip install --upgrade pip setuptools wheel

      - name: Install Ansible 2.9.27
        run: |
          python -m pip install 'ansible==2.9.27'

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook for Deployment
        run: |
          ansible-playbook -i "${{ secrets.EC2_HOST }}," .infra/ansible/deployment.yml \
            --extra-vars "docker_image_tag=${{ needs.build.outputs.version }}-${{ github.run_number }}-${{ needs.build.outputs.branch_name }}" \
            --extra-vars "ec2_host_name=${{ secrets.EC2_HOST }}" \
            --extra-vars "docker_hub_username=${{ secrets.DOCKER_USERNAME }}" \
            --extra-vars "ansible_python_interpreter=/usr/bin/python2.7" \
            --extra-vars "deploy_env=${{ needs.build.outputs.branch_name }}" \
            --user ${{ secrets.EC2_USER }} \
            --private-key ~/.ssh/id_rsa
